########################################################################
# **********INSTRUCTIONS**********
#
# Fill out the template by finding placeholders enclosed in '{{}}' characters.

# For example, fill out all of the {{ .Values.NAMESPACE }} placeholders with your deployment's namespace.
# Some placeholders are included in lists, in which case you may add as many as you require. For instance,
# each {{ .Values.DNS_NAME }} placeholder just indicates the first item in that list of DNS names.

#
# This is just an example for creating several self signed certificates and may be copied and edited to serve
# your purposes, or not used at all if you have separate certificates already available. 
#
########################################################################
########################################################################
# Create Cert Manager Bootstrap Issuer
########################################################################
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: detection-ca-bootstrap-issuer
  namespace: {{ .Values.NAMESPACE }}
spec:
  selfSigned: {}
---
########################################################################
# Create CA Root Certificate using bootstrap issuer
########################################################################
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: detection-root-ca-certificate
  namespace: {{ .Values.NAMESPACE }}
spec:
  isCA: true
  secretName: detection-ca-secret
  commonName: "Root Certificate"
  privateKey:
    algorithm: RSA
    size: 4096
    encoding: PKCS8
    rotationPolicy: Always
  issuerRef:
    name: detection-ca-bootstrap-issuer
    kind: Issuer
---
########################################################################
# Create CA Issuer using CA Root Certificate
########################################################################
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: detection-ca-issuer
  namespace: {{ .Values.NAMESPACE }}
spec:
  ca:
    secretName: detection-ca-secret
########################################################################
# Create Detection Engine Server Certificate
########################################################################
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: detection-ingress-tls-certificate
  namespace: {{ .Values.NAMESPACE }}
spec:
  secretName: detection-ingress-tls-secret
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  subject:
    organizations:
      - {{ .Values.ORGANIZATION }}
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
    rotationPolicy: Always
  usages:
    - server auth
  dnsNames:
    - {{ .Values.DNS_NAME }}
  issuerRef:
    name: detection-ca-issuer
    kind: Issuer
    group: cert-manager.io
---
########################################################################
# Create Client Certificate
########################################################################
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: detection-client-certificate
  namespace: {{ .Values.NAMESPACE }}
spec:
  secretName: detection-client-secret
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  subject:
    organizations:
      - {{ .Values.ORGANIZATION }}
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
    rotationPolicy: Always
  usages:
    - client auth
  dnsNames:
    - {{ .Values.DNS_NAME }}
  issuerRef:
    name: detection-ca-issuer
    kind: Issuer
    group: cert-manager.io
---
########################################################################
# Create Server Certificate for Redis
########################################################################
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: detection-redis-tls-certificate
  namespace: {{ .Values.NAMESPACE }}
spec:
  secretName: detection-redis-tls-secret
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  subject:
    organizations:
      - {{ .Values.ORGANIZATION }}
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
    rotationPolicy: Always
  usages:
    - server auth
  dnsNames:
    - {{ .Values.DNS_NAME }}
  issuerRef:
    name: detection-ca-issuer
    kind: Issuer
    group: cert-manager.io
---
########################################################################
# Create Server Certificate for Kafka
########################################################################
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: detection-kafka-tls-certificate
  namespace: {{ .Values.NAMESPACE }}
spec:
  secretName: detection-kafka-tls-secret
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  subject:
    organizations:
      - {{ .Values.ORGANIZATION }}
  isCA: false
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048
    rotationPolicy: Always
  usages:
    - server auth
  dnsNames:
    - {{ .Values.DNS_NAME }}
  issuerRef:
    name: detection-ca-issuer
    kind: Issuer
    group: cert-manager.io
---
