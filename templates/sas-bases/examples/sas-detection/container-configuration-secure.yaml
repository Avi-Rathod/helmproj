########################################################################
# Create Deployment
########################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sas-sda-scr-{{ .Values.ORGANIZATION }}
  namespace: {{ .Values.NAMESPACE }}
  labels:
    app.kubernetes.io/name: sas-sda-scr-{{ .Values.ORGANIZATION }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: sas-sda-scr-{{ .Values.ORGANIZATION }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sas-sda-scr-{{ .Values.ORGANIZATION }}
        sas.com/scr: "true"
    spec:
      # {{ .Values.SECURITY }} 
      volumes:
        - name: security
          secret:
            secretName: detection-ingress-tls-config-{{ .Values.ORGANIZATION }}
        - name: redissecurity
          secret:
            secretName: detection-redis-tls-config-{{ .Values.ORGANIZATION }}
        - name: kafkasecurity
          secret:
            secretName: detection-kafka-tls-config-{{ .Values.ORGANIZATION }}
      containers:
        - name: sas-sda-scr
          # Image from your docker registry
          image: {{ .Values.DECISION }}
          imagePullPolicy: "Always"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          # {{ .Values.SECURITY }} 
          volumeMounts:
            - name: security
              readOnly: true
              mountPath: /security
            - name: redissecurity
              readOnly: true 
              mountPath: /security/redis
          env:
            - name: SAS_SCR_LOG_LEVEL_App.tk.Detection
              value: INFO
            - name: PORT
              value: "8080"

            # REDIS PROPERTIES FOR SIGNATURE STORAGE
            - name: SAS_REDIS_HOST
              value: {{ .Values.VALUE_NEEDED }}
            - name: SAS_REDIS_PORT
              value: {{ .Values.VALUE_NEEDED }}
            - name: SAS_REDIS_PROFILE_COMPRESS
              value: false
            - name: SAS_REDIS_TLS # Setting to 0, N, or F will prohibit TLS. Setting to 1, Y, or T will allow TLS.
              value: Y
              
            # {{ .Values.SECURITY }}
            - name: SAS_REDIS_AUTH_USER
              value: {{ .Values.VALUE_NEEDED }}
            - name: SAS_REDIS_AUTH_PASS
              value: {{ .Values.VALUE_NEEDED }}
            - name: SAS_REDIS_CA_CERT
              value: {{ .Values.VALUE_NEEDED }}
            - name: SAS_REDIS_TRUST_CERT_PATH
              value: {{ .Values.VALUE_NEEDED }}
            - name: SAS_REDIS_CLIENT_CERT_FILE
              value: {{ .Values.VALUE_NEEDED }}
            - name: SAS_REDIS_CLIENT_PRIV_KEY_FILE
              value: {{ .Values.VALUE_NEEDED }}
            - name: SAS_REDIS_SERVER_DOMAIN
              value: {{ .Values.VALUE_NEEDED }}

        - name: sas-detection
          image: pulp.unx.sas.com/cdp-release-x64_oci_linux_2-docker-latest/sas-detection:latest
          imagePullPolicy: "Always"
          readinessProbe:
              httpGet:
                  path: /detection/ready
                  port: http
              initialDelaySeconds: 5
              periodSeconds: 5
          ports:
            - name: http
              containerPort: 8777
              protocol: TCP
          volumeMounts:
            - name: security
              readOnly: true
              mountPath: /security
            - name: kafkasecurity
              readOnly: true
              mountPath: /security/kafka
            - name: redissecurity
              readOnly: true 
              mountPath: /security/redis
          env:
            # DON'T CHANGE THESE
            - name: SAS_DETECTION_SERVICE_URL
              value: "http://localhost:8777"
            - name: PORT
              value: "8777"
            - name: SAS_DETECTION_PROCESSING_EXECUTION_URL
              value: http://localhost:8080

            # LOG LEVEL... DEBUG, INFO, WARN, ERROR
            - name: SAS_LOG_LEVEL
              value: {{ .Values.VALUE_NEEDED }} # Defaults to 'INFO' if removed
            - name: SAS_LOG_LOCALE
              value: {{ .Values.VALUE_NEEDED }} # Defaults to 'en' if removed
              
            # KAFKA PROPERTIES
            - name: SAS_DETECTION_KAFKA_SERVER
              value: {{ .Values.VALUE_NEEDED }}   # Bootstrap server, host:port
            - name: SAS_DETECTION_KAFKA_TDR_TOPIC
              value: tdr-{{ .Values.ORGANIZATION }}
            - name: SAS_DETECTION_KAFKA_REJECTTOPIC
              value: reject-{{ .Values.ORGANIZATION }}
            - name: SAS_DETECTION_KAFKA_TOPIC
              value: input-{{ .Values.ORGANIZATION }}
            - name: SAS_DETECTION_KAFKA_CONSUMER_ENABLED
              value: {{ .Values.VALUE_NEEDED }}
            # {{ .Values.SECURITY }}
            - name: SAS_DETECTION_KAFKA_SECURITY_PROTOCOL
              value: {{ .Values.VALUE_NEEDED }} # PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL. defaults to PLAINTEXT
            - name: SAS_DETECTION_KAFKA_TRUSTSTORE
              value: {{ .Values.VALUE_NEEDED }} # Path to trusted ca cert for kafka. Optional 
            - name: SAS_DETECTION_KAFKA_ENABLE_HOSTNAME_VERIFICATION
              value: {{ .Values.VALUE_NEEDED }} # true or false. Defaults to true. Disables DNS hostname verification for TLS. 
            - name: SAS_DETECTION_KAFKA_SASL_USERNAME
              value: {{ .Values.VALUE_NEEDED }} 
              # Optionally, store and get from a secret
              # valueFrom:
              #   secretKeyRef:
              #     name: {{ .Values.VALUE_NEEDED }}
              #     key: {{ .Values.VALUE_NEEDED }}
            - name: SAS_DETECTION_KAFKA_SASL_PASSWORD
              value: {{ .Values.VALUE_NEEDED }} 
              # Optionally, store and get from a secret
              # valueFrom:
              #   secretKeyRef:
              #     name: {{ .Values.VALUE_NEEDED }}
              #     key: {{ .Values.VALUE_NEEDED }}

            # REDIS CONNECTION PROPERTY, FOR RULE METRICS
            - name: SAS_DETECTION_REDIS_HOST
              value: {{ .Values.VALUE_NEEDED }}
            - name: SAS_DETECTION_REDIS_PORT
              value: {{ .Values.VALUE_NEEDED }}
            - name: SAS_DETECTION_REDIS_POOL_SIZE # Default value is 10 if not specified
              value: '10'
            # {{ .Values.SECURITY }}
            - name: SAS_DETECTION_REDIS_AUTH_PASS
              value: {{ .Values.VALUE_NEEDED }}
            # Optionally, store and get from a secret
            # valueFrom:
            #   secretKeyRef:
            #     name: {{ .Values.VALUE_NEEDED }}
            #     key: {{ .Values.VALUE_NEEDED }}
            - name: SAS_DETECTION_REDIS_TLS_ENABLED
              value: {{ .Values.VALUE_NEEDED }}
            - name: SAS_DETECTION_REDIS_TLS_CACERT
              value: /security/redis/tls.crt
            - name: SAS_DETECTION_REDIS_SERVER_DOMAIN 
              value: {{ .Values.VALUE_NEEDED }}

            # PROCESSING CONFIGURATION PROPERTIES
            - name: SAS_DETECTION_DEPLOYMENT_NAME
              value: sas-sda-scr-{{ .Values.ORGANIZATION }}
            - name: SAS_DETECTION_PROCESSING_DISABLEMETRICS
              value: {{ .Values.VALUE_NEEDED }}   
            - name: SAS_DETECTION_PROCESSING_SLA
              value: {{ .Values.VALUE_NEEDED }}   # In Milliseconds
            - name: SAS_DETECTION_PROCESSING_SETVERBOSE
              value: {{ .Values.VALUE_NEEDED }}   # 1-13, sets logging verbosity for SCR container logs
            - name: SAS_DETECTION_PROCESSING_OUTPUT_FILTER
              value: {{ .Values.VALUE_NEEDED }}   # comma separated list of variable set or variable paths to include... message.sas.system,message.request,message.sas.decision
            - name: SAS_DETECTION_KAFKA_BYPASS
              value: "false"

            # WATCHER CONFIGURATION PROPERTIES
            - name: SAS_DETECTION_WATCHER_INTERVAL_SEC
              value: {{ .Values.VALUE_NEEDED }}   # How many seconds between each run of the watcher. Setting 0 disables the watcher.
            - name: SAS_DETECTION_WATCHER_SSL_ENABLED
              value: "true"               # True if the watcher should make requests to the Docker registry with SSL, false if not.  Default: true
            # Optionally, store and get from a secret
            # valueFrom:
            #   secretKeyRef:
            #     name: {{ .Values.VALUE_NEEDED }}
            #     key: {{ .Values.VALUE_NEEDED }}

          # Optional - uncomment below block for running python models
          # - name: sas-sda-mlserver
          #   image: {{ .Values.VALUE_NEEDED }} # The model to run
          #   imagePullPolicy: "Always"
          #   ports:
          #     - name: http
          #     containerPort: 50051
          #     protocol: TCP
